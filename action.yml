name: "venkatamutyala-test-action1"
author: "@VenkataMutyala"
description: "Abstracts defining actions to push Docker images to desired registry, defaults to ghcr.io"
branding:
  icon: 'box'
  color: 'red'

inputs:
  path:
    description: Path to the Terraform configuration
    required: false
    default: .
  workspace:
    description: Name of the Terraform workspace
    required: false
    default: default
  backend_config:
    description: List of backend config values to set, one per line
    required: false
    default: ""
  backend_config_file:
    description: Path to a backend config file
    required: false
    default: ""
  variables:
    description: Variable definitions
    required: false
  var:
    description: Comma separated list of vars to set, e.g. 'foo=bar'
    required: false
    default: ""
    deprecationMessage: Use the variables input instead.
  var_file:
    description: List of var file paths, one per line
    required: false
    default: ""
  parallelism:
    description: Limit the number of concurrent operations
    required: false
    default: "0"
  label:
    description: A friendly name for this plan
    required: false
    default: ""
  auto_approve:
    description: Automatically approve and apply plan
    required: false
    default: "false"
  target:
    description: List of resources to target for the apply, one per line
    required: false
    default: ""
  replace:
    description: List of resources to replace if an update is required, one per line
    required: false
    default: ""
  destroy:
    description: Create and apply a plan to destroy all resources
    required: false
    default: "false"
  plan_path:
    description: Path to the plan file to apply.
    required: false
    default: ""
  backend_type:
    description: The backend plugin name
    required: true

runs:
  using: "composite"
  steps:
    - name: Post Workflow Run Link
      if: github.event.issue.pull_request != null
      shell: bash
      run: |
        COMMENT_URL="${{ github.event.issue.comments_url }}"
        WORKFLOW_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        COMMENT_TEXT="View workflow details [here]($WORKFLOW_URL)."
        
        curl -s -H "Authorization: token ${{ inputs.github_token }}" \
             -H "Accept: application/vnd.github.v3+json" \
             -X POST "$COMMENT_URL" \
             -d "{\"body\":\"$COMMENT_TEXT\"}"
             
    - name: Extract Command and Directory
      id: extract
      shell: bash
      run: |
        COMMENT="${{ github.event.comment.body }}"
        DIRECTORY=""
        
        if [[ "$COMMENT" =~ terraform\ plan\ (.+) ]]; then
          echo "COMMAND=plan" >> $GITHUB_ENV
          DIRECTORY="${BASH_REMATCH[1]}"
        elif [[ "$COMMENT" =~ terraform\ apply\ (.+) ]]; then
          echo "COMMAND=apply" >> $GITHUB_ENV
          DIRECTORY="${BASH_REMATCH[1]}"
        elif [[ "$COMMENT" =~ terraform\ yolo\ (.+) ]]; then
          echo "COMMAND=yolo" >> $GITHUB_ENV
          DIRECTORY="${BASH_REMATCH[1]}"
        fi
        
        # Trim leading and trailing whitespace (including newlines)
        DIRECTORY=$(echo "$DIRECTORY" | sed 's/^[[:space:]]*//;s/[[:space:]]*$//')
        
        # Check if DIRECTORY is empty and exit with code 1 if it is
        if [ -z "$DIRECTORY" ]; then
          echo "Error: No directory found."
          exit 1
        fi
        
        echo "DIRECTORY=$DIRECTORY" >> $GITHUB_ENV
        

    - name: Checkout
      uses: actions/checkout@v4
  
    - name: terraform plan
      if: env.COMMAND == 'plan'
      uses: dflook/terraform-plan@v1
      with:
        path: ${{ env.DIRECTORY }}

    - name: terraform apply
      if: env.COMMAND == 'apply'
      uses: dflook/terraform-apply@v1
      with:
        path: ${{ env.DIRECTORY }}

