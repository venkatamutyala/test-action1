name: "venkatamutyala-test-action1"
author: "@VenkataMutyala"
description: "Abstracts defining actions to push Docker images to desired registry, defaults to ghcr.io"
branding:
  icon: 'box'
  color: 'red'

inputs:
  # common inputs
  dockerfile:
    description: 'The Dockerfile filename'
    required: false
    default: 'Dockerfile'

  # ghcr
  github_token:
     description: "Personal Access Token (PAT) used to authenticate with the GitHub Container Registry."
     required: false
     default: ${{ github.token }}

runs:
  using: "composite"
  steps:
    - name: Post Workflow Run Link
      if: github.event.issue.pull_request != null && always()
      shell: bash
      run: |
        COMMENT_URL="${{ github.event.issue.comments_url }}"
        WORKFLOW_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        COMMENT_TEXT="View workflow details [here]($WORKFLOW_URL)."
        
        curl -s -H "Authorization: token ${{ inputs.github_token }}" \
             -H "Accept: application/vnd.github.v3+json" \
             -X POST "$COMMENT_URL" \
             -d "{\"body\":\"$COMMENT_TEXT\"}"
             
    - name: Extract Command and Directory
      id: extract
      shell: bash
      run: |
        COMMENT="${{ github.event.comment.body }}"
        DIRECTORY=""
        
        if [[ "$COMMENT" =~ terraform\ plan\ (.+) ]]; then
          echo "COMMAND=plan" >> $GITHUB_ENV
          DIRECTORY="${BASH_REMATCH[1]}"
        elif [[ "$COMMENT" =~ terraform\ apply\ (.+) ]]; then
          echo "COMMAND=apply" >> $GITHUB_ENV
          DIRECTORY="${BASH_REMATCH[1]}"
        elif [[ "$COMMENT" =~ terraform\ yolo\ (.+) ]]; then
          echo "COMMAND=yolo" >> $GITHUB_ENV
          DIRECTORY="${BASH_REMATCH[1]}"
        fi
        
        # Trim leading and trailing whitespace (including newlines)
        DIRECTORY=$(echo "$DIRECTORY" | sed 's/^[[:space:]]*//;s/[[:space:]]*$//')
        
        # Check if DIRECTORY is empty and exit with code 1 if it is
        if [ -z "$DIRECTORY" ]; then
          echo "Error: No directory found."
          exit 1
        fi
        
        echo "DIRECTORY=$DIRECTORY" >> $GITHUB_ENV
        

    - name: Checkout
      uses: actions/checkout@v4
  
    - name: terraform plan
      if: env.COMMAND == 'plan'
      uses: dflook/terraform-plan@v1
      with:
        path: ${{ env.DIRECTORY }}

    - name: terraform apply
      if: env.COMMAND == 'apply'
      uses: dflook/terraform-apply@v1
      with:
        path: ${{ env.DIRECTORY }}

